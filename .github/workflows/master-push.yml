name: Master Push

on:
  push:
    branches:
      - master

jobs:
  linter:
    # Only one OS is required since fmt is cross platform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Check `pnpm format` passes
        run: pnpm format:check

      - name: Check `pnpm lint` passes
        run: pnpm lint:check

  deploy-db-rest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ['gateway', 'users', 'degrees', 'courses']
    steps:
      - uses: actions/checkout@v3

      - name: Rename dockerfile
        working-directory: db
        run: >
          mv
          Dockerfile.db_rest
          Dockerfile

      - name: Install Railway
        run: npm install --global @railway/cli

      - name: Deploy
        working-directory: db
        run: railway up --service db_rest
        env:
          RAILWAY_TOKEN: ${{ secrets[format('RAILWAY_TOKEN_{0}', matrix.project)] }}

  deploy-worker:
    needs: [linter]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker: ['gateway', 'users', 'degrees', 'courses']
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Deploy
        working-directory: "workers/${{ matrix.worker }}"
        run: pnpm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

  deploy-kafka-proxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Railway
        run: npm install --global @railway/cli

      - name: Deploy
        working-directory: db
        run: railway up --service kafka-proxy
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_GATEWAY }}
