version: "3"
services:
  # gateway_db:
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile.db_dev
  #     args:
  #       DB: gateway
  #   container_name: mesw-cosn-gateway_db
  #   environment:
  #     POSTGRES_DB: app_db
  #     POSTGRES_USER: app_user
  #     POSTGRES_PASSWORD: password
  # gateway_db_rest:
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile.db_rest
  #   container_name: mesw-cosn-gateway_db_rest
  #   environment:
  #     PGRST_DB_URI: postgres://app_user:password@gateway_db:5432/app_db
  #     # PGRST_DB_ANON_ROLE: postgres
  #     PGRST_DB_ANON_ROLE: app_user
  # gateway:
  #   build:
  #     context: .
  #     dockerfile: workers/Dockerfile.dev
  #     args:
  #       WORKER: gateway
  #   container_name: mesw-cosn-gateway
  #   volumes:
  #     - ./workers/gateway/src:/usr/src/app/workers/gateway/src
  #   ports:
  #     - "60000:8787"
  # users_db:
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile.db_dev
  #     args:
  #       DB: users
  #   container_name: mesw-cosn-users_db
  #   environment:
  #     POSTGRES_DB: app_db
  #     POSTGRES_USER: app_user
  #     POSTGRES_PASSWORD: password
  # users_db_rest:
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile.db_rest
  #   container_name: mesw-cosn-users_db_rest
  #   environment:
  #     PGRST_DB_URI: postgres://app_user:password@users_db:5432/app_db
  #     # PGRST_DB_ANON_ROLE: postgres
  #     PGRST_DB_ANON_ROLE: app_user
  # users:
  #   build:
  #     context: .
  #     dockerfile: workers/Dockerfile.dev
  #     args:
  #       WORKER: users
  #   container_name: mesw-cosn-users
  #   volumes:
  #     - ./workers/users/src:/usr/src/app/workers/users/src
  #   ports:
  #     - "60001:8787"
  # degrees_db:
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile.db_dev
  #     args:
  #       DB: degrees
  #   container_name: mesw-cosn-degrees_db
  #   environment:
  #     POSTGRES_DB: app_db
  #     POSTGRES_USER: app_user
  #     POSTGRES_PASSWORD: password
  # degrees_db_rest:
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile.db_rest
  #     args:
  #       PORT: 4000
  #   container_name: mesw-cosn-degrees_db_rest
  #   environment:
  #     PGRST_DB_URI: postgres://app_user:password@degrees_db:5432/app_db
  #     # PGRST_DB_ANON_ROLE: postgres
  #     PGRST_DB_ANON_ROLE: app_user
  # degrees:
  #   build:
  #     context: .
  #     dockerfile: workers/Dockerfile.dev
  #     args:
  #       WORKER: degrees
  #   container_name: mesw-cosn-degrees
  #   volumes:
  #     - ./workers/degrees/src:/usr/src/app/workers/degrees/src
  #   ports:
  #     - "60002:8787"
  courses_db:
    build:
      context: ./db
      dockerfile: Dockerfile.db_dev
      args:
        DB: courses
    container_name: mesw-cosn-courses_db
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: password
  courses_db_rest:
    build:
      context: ./db
      dockerfile: Dockerfile.db_rest
      args:
        PORT: 4000
    container_name: mesw-cosn-courses_db_rest
    environment:
      PGRST_DB_URI: postgres://app_user:password@courses_db:5432/app_db
      # PGRST_DB_ANON_ROLE: postgres
      PGRST_DB_ANON_ROLE: app_user
  courses:
    build:
      context: .
      dockerfile: workers/Dockerfile.dev
      args:
        WORKER: courses
    container_name: mesw-cosn-courses
    volumes:
      - ./workers/courses/src:/usr/src/app/workers/courses/src
    ports:
      - "60003:8787"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.69
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "course:1:1,faculty:1:1;degree:1:1,user:1:1"
  kafka_proxy:
    build:
      context: ./kafka-proxy
      dockerfile: Dockerfile
    container_name: mesw-cosn-kafka_proxy
    depends_on:
      - kafka
    environment:
      KAFKA_URL: kafka:9092
    volumes:
      - ./kafka-proxy:/usr/src/app/kafka-proxy
    ports:
      - "60007:4000"
